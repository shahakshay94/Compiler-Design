// 3.1 parsing

class InheritedUtility{
    integer c;
    integer d;
};

class B{
    integer b1;
};
class A{
    integer a1[5][5];
};

// 3.1.5 class declarations: data member declarations, method declarations, inheritance list
// 3.1.1 variable declarations: integer, float, class types, array, array of class types
class Utility : InheritedUtility,B{
    // integer type
    integer a;

    // float type
    float myfloat;

    // array type
    integer b[5][5];

    // Object Type
    A myA;

    // Array of Object
    A arrayObject[10];

    integer mult(integer x,integer y);

};

// 3.1.3 free functions
integer getMax(integer a,integer b,integer c){

    // 3.1.7 conditional statement, including nested if
    if(a>b) then{
        if(a>c) then{
            return (a);
        }else{
            return(c);
        };
    }else{
        if(b>c) then{
            return (b);
        }else{
            return(c);
        };
    };

};


// 3.1.4 member function definitions
integer Utility:: mult(integer x,integer y){

   // 3.1.9 read(var) / write(expression) / return(expression) statements
    read(x);
    read(y);
    write(x);
    write(y);
    return(x*y);
};


// 3.1.2 main function
main {
    integer ans;
    ans = getMax(5,10,15);

    write(ans);

    // 3.1.6 complex expressions (all arithmetic, relational and logic operators in one expression)
    ans  = 1 + ((2 * 2) - 3) + 7 > 1 && || ! - 1;

};